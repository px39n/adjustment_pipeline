/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

const vibrancySettings = [
    "default",
    "content",
    "fullscreen-ui",
    "header",
    "hud",
    "menu",
    "popover",
    "selection",
    "sheet",
    "sidebar",
    "titlebar",
    "tooltip",
    "under-page",
    "under-window",
    "window",
];
const DEFAULT_SETTINGS = {
    opacity: 1,
    alwaysOnTop: false,
    vibrancy: "default",
    trafficLightsPosX: 7,
    trafficLightsPosY: 6,
};
const ICON_SVG = `<path d="M41.667 20.833a4.167 4.167 0 1 0 4.167 4.167A4.167 4.167 0 0 0 41.667 20.833ZM25 20.833A4.167 4.167 0 1 0 29.167 25 4.167 4.167 0 0 0 25 20.833Zm33.333 0a4.167 4.167 0 1 0 4.167 4.167A4.167 4.167 0 0 0 58.333 20.833Zm25 -16.667H16.667A12.5 12.5 0 0 0 4.167 16.667V83.333a12.5 12.5 0 0 0 12.5 12.5H83.333a12.5 12.5 0 0 0 12.5 -12.5V16.667A12.5 12.5 0 0 0 83.333 4.167Zm4.167 79.167a4.167 4.167 0 0 1 -4.167 4.167H16.667a4.167 4.167 0 0 1 -4.167 -4.167V45.833H87.5ZM87.5 37.5H12.5V16.667A4.167 4.167 0 0 1 16.667 12.5H83.333a4.167 4.167 0 0 1 4.167 4.167Z" fill="currentColor"/>`;
const setAlwaysOnTop = (on) => {
    window.require("electron").remote.getCurrentWindow().setAlwaysOnTop(on);
};
const setOpacity = (opacity) => {
    window.require("electron").remote.getCurrentWindow().setOpacity(opacity);
};
const setVibrancy = (vibrancy, isTranslucent) => {
    if (vibrancy === "default" && isTranslucent) {
        return window
            .require("electron")
            .remote.getCurrentWindow()
            .setVibrancy("window");
    }
    if (vibrancy === "default") {
        document.body.removeClass("is-translucent");
        return window
            .require("electron")
            .remote.getCurrentWindow()
            .setVibrancy(null);
    }
    document.body.addClass("is-translucent");
    window.require("electron").remote.getCurrentWindow().setVibrancy(vibrancy);
};
const setTrafficLightsPos = (styleTag, x, y) => {
    styleTag.innerText = `
      :root {
        --ewt-traffic-light-x: ${x}px;
        --ewt-traffic-light-y: ${y}px;
      }
    `
        .trim()
        .replace(/[\r\n\s]+/g, " ");
    window
        .require("electron")
        .remote.getCurrentWindow()
        .setTrafficLightPosition({ x, y });
};
class ElectronWindowTweaker extends obsidian.Plugin {
    getIsTranslucent() {
        return !!this.app.vault.getConfig("translucency");
    }
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadSettings();
            this.styleTag = document.createElement("style");
            this.styleTag.id = "ewt-styles";
            document.getElementsByTagName("head")[0].appendChild(this.styleTag);
            this.addSettingTab(new SettingsTab(this.app, this));
            this.app.workspace.onLayoutReady(() => {
                setTimeout(() => {
                    // Really shove this baby to the end
                    this.setupStatusBar();
                });
            });
            setOpacity(this.settings.opacity);
            setAlwaysOnTop(this.settings.alwaysOnTop);
            if (process.platform === "darwin") {
                setVibrancy(this.settings.vibrancy, this.getIsTranslucent());
                setTrafficLightsPos(this.styleTag, this.settings.trafficLightsPosX, this.settings.trafficLightsPosY);
            }
            this.addCommand({
                id: "ewt-increase-opacity",
                name: "Increase opacity",
                callback: () => __awaiter(this, void 0, void 0, function* () {
                    if (this.settings.opacity === 1)
                        return;
                    this.settings.opacity = Math.min(this.settings.opacity + 0.05, 1);
                    setOpacity(this.settings.opacity);
                    yield this.saveSettings();
                }),
            });
            this.addCommand({
                id: "ewt-decrease-opacity",
                name: "Decrease opacity",
                callback: () => __awaiter(this, void 0, void 0, function* () {
                    if (this.settings.opacity === 0)
                        return;
                    this.settings.opacity = Math.max(this.settings.opacity - 0.05, 0);
                    setOpacity(this.settings.opacity);
                    yield this.saveSettings();
                }),
            });
            this.addCommand({
                id: "ewt-toggle-on-top",
                name: "Toggle always on top",
                callback: () => __awaiter(this, void 0, void 0, function* () {
                    this.settings.alwaysOnTop = !this.settings.alwaysOnTop;
                    setAlwaysOnTop(this.settings.alwaysOnTop);
                    yield this.saveSettings();
                }),
            });
        });
    }
    setupStatusBar() {
        this.statusBarIcon = this.addStatusBarItem();
        this.statusBarIcon.addClass("ewt-statusbar-button");
        obsidian.addIcon("electron-window", ICON_SVG);
        obsidian.setIcon(this.statusBarIcon, "electron-window");
        this.registerDomEvent(this.statusBarIcon, "click", (e) => {
            const statusBarRect = this.statusBarIcon.parentElement.getBoundingClientRect();
            const statusBarIconRect = this.statusBarIcon.getBoundingClientRect();
            const menu = new obsidian.Menu(this.app).addItem((item) => {
                item.setTitle("Always on top");
                const itemDom = item.dom;
                const toggleComponent = new obsidian.ToggleComponent(itemDom)
                    .setValue(this.settings.alwaysOnTop)
                    .setDisabled(true);
                const toggle = () => __awaiter(this, void 0, void 0, function* () {
                    this.settings.alwaysOnTop = !this.settings.alwaysOnTop;
                    toggleComponent.setValue(this.settings.alwaysOnTop);
                    setAlwaysOnTop(this.settings.alwaysOnTop);
                    yield this.saveSettings();
                });
                item.onClick((e) => {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    toggle();
                });
            });
            const menuDom = menu.dom;
            menuDom.addClass("ewt-statusbar-menu");
            const item = menuDom.createDiv("menu-item");
            item.createDiv({ cls: "menu-item-icon" });
            item.createDiv({ text: "Opacity", cls: "menu-item-title" });
            item.onClickEvent((e) => e.stopPropagation());
            new obsidian.SliderComponent(item)
                .setLimits(50, 100, 1)
                .setValue(this.settings.opacity * 100)
                .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                console.log(value);
                this.settings.opacity = value / 100;
                setOpacity(this.settings.opacity);
                yield this.saveSettings();
            }), 100, true));
            menu.showAtPosition({
                x: statusBarIconRect.right + 5,
                y: statusBarRect.top - 5,
            });
        });
    }
    onunload() {
        setOpacity(DEFAULT_SETTINGS.opacity);
        setAlwaysOnTop(DEFAULT_SETTINGS.alwaysOnTop);
        setVibrancy(DEFAULT_SETTINGS.vibrancy, this.getIsTranslucent());
        setTrafficLightsPos(this.styleTag, DEFAULT_SETTINGS.trafficLightsPosX, DEFAULT_SETTINGS.trafficLightsPosY);
        this.styleTag.remove();
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}
class SettingsTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        let { containerEl } = this;
        containerEl.empty();
        new obsidian.Setting(containerEl).setName("Always on top").addToggle((toggle) => {
            toggle.setValue(this.plugin.settings.alwaysOnTop).onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.alwaysOnTop = value;
                setAlwaysOnTop(this.plugin.settings.alwaysOnTop);
                yield this.plugin.saveSettings();
            }), 100, true));
        });
        new obsidian.Setting(containerEl)
            .setName("Window opacity percent")
            .addSlider((slider) => {
            slider
                .setLimits(50, 100, 1)
                .setDynamicTooltip()
                .setValue(this.plugin.settings.opacity * 100)
                .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.opacity = value / 100;
                setOpacity(this.plugin.settings.opacity);
                yield this.plugin.saveSettings();
            }), 100, true));
        });
        if (process.platform === "darwin") {
            new obsidian.Setting(containerEl)
                .setName("Window vibrancy")
                .setDesc("Note: this can cause lag on some systems")
                .addDropdown((dropdown) => {
                dropdown
                    .addOptions(vibrancySettings.reduce((opts, setting) => {
                    opts[setting] = setting;
                    return opts;
                }, {}))
                    .setValue(this.plugin.settings.vibrancy)
                    .onChange((value) => __awaiter(this, void 0, void 0, function* () {
                    this.plugin.settings.vibrancy = value;
                    setVibrancy(this.plugin.settings.vibrancy, this.plugin.getIsTranslucent());
                    yield this.plugin.saveSettings();
                }));
            });
            new obsidian.Setting(containerEl)
                .setName("Traffic lights X position")
                .addText((input) => {
                input.inputEl.setAttribute("type", "number");
                input
                    .setValue(this.plugin.settings.trafficLightsPosX.toString())
                    .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                    const n = parseInt(value);
                    if (isNaN(n)) {
                        return;
                    }
                    this.plugin.settings.trafficLightsPosX = n;
                    setTrafficLightsPos(this.plugin.styleTag, this.plugin.settings.trafficLightsPosX, this.plugin.settings.trafficLightsPosY);
                    yield this.plugin.saveSettings();
                }), 100, true));
            });
            new obsidian.Setting(containerEl)
                .setName("Traffic lights Y position")
                .addText((input) => {
                input.inputEl.setAttribute("type", "number");
                input
                    .setValue(this.plugin.settings.trafficLightsPosY.toString())
                    .onChange(obsidian.debounce((value) => __awaiter(this, void 0, void 0, function* () {
                    const n = parseInt(value);
                    if (isNaN(n)) {
                        return;
                    }
                    this.plugin.settings.trafficLightsPosY = n;
                    setTrafficLightsPos(this.plugin.styleTag, this.plugin.settings.trafficLightsPosX, this.plugin.settings.trafficLightsPosY);
                    yield this.plugin.saveSettings();
                }), 100, true));
            });
        }
    }
}

module.exports = ElectronWindowTweaker;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
